#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function status() {
    if [ -s $OPENSHIFT_PG_DATA_DIR/postmaster.pid ]; then
        client_result "$OPENSHIFT_PG_IDENT is running"
        client_result "  Connect to pg using:  psql '$OPENSHIFT_PG_DB_URL'"
        return 0
    else
        client_result "$OPENSHIFT_PG_IDENT is not running"
        return 1
    fi
}

function start() {
    if [ -s $OPENSHIFT_PG_DATA_DIR/postmaster.pid ]; then
        client_result "$OPENSHIFT_PG_IDENT is running already."
        return 0
    fi

    client_result "starting $OPENSHIFT_PG_IDENT..."
    out=$OPENSHIFT_TMP_DIR/pg-startup.out
    if ! nohup pg_ctl -D $OPENSHIFT_PG_DATA_DIR start -w -t 120 &>$out; then
        cat $out
        tail -25 $OPENSHIFT_PG_DATA_DIR/pg_log/postgresql-$(date +%u).log
        return 1
    fi

    export PGUSER= PGHOST= PGPORT=$OPENSHIFT_PG_PRIVATE_PORT
    db_exists=$(psql -c '' &>/dev/null && echo 1 || echo 0)
    if [ "$db_exists" -ne 1 ]; then
        echo "creating the database..."
        createuser $OPENSHIFT_PG_DB_USERNAME || true
        createdb -O $OPENSHIFT_PG_DB_USERNAME $PGDATABASE
    fi

    if [ -d $OPENSHIFT_TMP_DIR/postgresql-$OPENSHIFT_PG_VERSION ]; then
        echo "cleaning up..."
        rm -rf $OPENSHIFT_TMP_DIR/postgresql-$OPENSHIFT_PG_VERSION
    fi

    client_result "Done. Connect using: psql $OPENSHIFT_PG_DB_URL"
    client_result "and don't forget to back up your DB regularly"
}

function stop() {
    client_result "stopping $OPENSHIFT_PG_IDENT..."
    pg_ctl -m fast -D $OPENSHIFT_PG_DATA_DIR stop
    return 0
}

function restart() {
    if status; then stop; fi
    start
}

# Handle commands.
case "$1" in
    start)               start       ;;
    restart)             restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    *)
esac
